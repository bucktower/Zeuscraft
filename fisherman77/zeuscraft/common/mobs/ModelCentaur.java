// Date: 5/26/2012 8:41:45 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package fisherman77.zeuscraft.common.mobs;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelCentaur extends ModelBase
{
  //fields
    ModelRenderer head;
    ModelRenderer horsebody;
    ModelRenderer rightarm;
    ModelRenderer leftarm;
    ModelRenderer rightleg;
    ModelRenderer righthindleg;
    ModelRenderer body;
    ModelRenderer leftleg;
    ModelRenderer tailbase;
    ModelRenderer lefthindleg;
    ModelRenderer tail;
  
  public ModelCentaur()
  {
      //super(12, 0.0F); // since this class EXTENDS ModelQuadraped, it will automatically animate parts like the head and legs. 
                       //All this code you see below was made using Techne, when you export your model using Techne, you will 
                       //have to copy and paste that code here.
	  
    textureWidth = 64;
    textureHeight = 64;
    
      head = new ModelRenderer(this, 0, 0);
      head.addBox(-4F, -8F, -4F, 8, 8, 8);
      head.setRotationPoint(0F, -4F, -2F);
      head.setTextureSize(64, 32);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
      horsebody = new ModelRenderer(this, 0, 32);
      horsebody.addBox(-4F, 0F, -2F, 8, 8, 16);
      horsebody.setRotationPoint(0F, 4F, -2F);
      horsebody.setTextureSize(64, 32);
      horsebody.mirror = true;
      setRotation(horsebody, 0F, 0F, 0F);
      rightarm = new ModelRenderer(this, 40, 16);
      rightarm.addBox(-3F, -2F, -2F, 4, 12, 4);
      rightarm.setRotationPoint(-5F, -2F, -2F);
      rightarm.setTextureSize(64, 32);
      rightarm.mirror = true;
      setRotation(rightarm, 0F, 0F, 0F);
      leftarm = new ModelRenderer(this, 40, 16);
      leftarm.addBox(-1F, -2F, -2F, 4, 12, 4);
      leftarm.setRotationPoint(5F, -2F, -2F);
      leftarm.setTextureSize(64, 32);
      leftarm.mirror = true;
      setRotation(leftarm, 0F, 0F, 0F);
      rightleg = new ModelRenderer(this, 0, 16);
      rightleg.addBox(-2F, 0F, -2F, 4, 12, 4);
      rightleg.setRotationPoint(-2F, 12F, -1F);
      rightleg.setTextureSize(64, 32);
      rightleg.mirror = true;
      setRotation(rightleg, 0F, 0F, 0F);
      righthindleg = new ModelRenderer(this, 0, 16);
      righthindleg.addBox(-2F, 0F, -2F, 4, 12, 4);
      righthindleg.setRotationPoint(-2F, 12F, 9F);
      righthindleg.setTextureSize(64, 32);
      righthindleg.mirror = true;
      setRotation(righthindleg, 0F, 0F, 0F);
      body = new ModelRenderer(this, 16, 16);
      body.addBox(-4F, 0F, -2F, 8, 8, 4);
      body.setRotationPoint(0F, -4F, -2F);
      body.setTextureSize(64, 32);
      body.mirror = true;
      setRotation(body, 0F, 0F, 0F);
      leftleg = new ModelRenderer(this, 0, 16);
      leftleg.addBox(-2F, 0F, -2F, 4, 12, 4);
      leftleg.setRotationPoint(2F, 12F, -1F);
      leftleg.setTextureSize(64, 32);
      leftleg.mirror = true;
      setRotation(leftleg, 0F, 0F, 0F);
      tailbase = new ModelRenderer(this, 48, 52);
      tailbase.addBox(-1F, -1F, -1F, 2, 2, 6);
      tailbase.setRotationPoint(0F, 5F, 11F);
      tailbase.setTextureSize(64, 32);
      tailbase.mirror = true;
      setRotation(tailbase, 0.4089647F, 0F, 0F);
      lefthindleg = new ModelRenderer(this, 0, 16);
      lefthindleg.addBox(-2F, 0F, -2F, 4, 12, 4);
      lefthindleg.setRotationPoint(2F, 12F, 9F);
      lefthindleg.setTextureSize(64, 32);
      lefthindleg.mirror = true;
      setRotation(lefthindleg, 0F, 0F, 0F);
      tail = new ModelRenderer(this, 48, 32);
      tail.addBox(-2F, 0F, -2F, 4, 16, 4);
      tail.setRotationPoint(0F, 2F, 15F);
      tail.setTextureSize(64, 32);
      tail.mirror = true;
      setRotation(tail, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    head.render(f5);
    horsebody.render(f5);
    rightarm.render(f5);
    leftarm.render(f5);
    rightleg.render(f5);
    righthindleg.render(f5);
    body.render(f5);
    leftleg.render(f5);
    tailbase.render(f5);
    lefthindleg.render(f5);
    tail.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6) {
	  rightleg.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
	  leftleg.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
	  righthindleg.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
	  lefthindleg.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2; }
	  }

